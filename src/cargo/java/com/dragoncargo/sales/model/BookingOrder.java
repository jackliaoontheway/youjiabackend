package com.dragoncargo.sales.model;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.dragoncargo.customer.model.CustomerCenter;
import com.dragoncargo.general.model.AirportWarehouse;
import com.dragoncargo.omm.model.FlightInfo;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.polarj.model.HasOwner;
import com.polarj.model.UserAccount;
import com.polarj.model.annotation.FieldMetaData;
import com.polarj.model.annotation.ModelMetaData;
import com.polarj.model.enumeration.FieldMetaDataSupportedDataType;
import com.polarj.workflow.model.ModelWithWorkflowStep;

import lombok.Getter;
import lombok.Setter;

@ModelMetaData(label = "BookingOrder", showDetailFieldName = "orderNum")
@Entity
@Table(name = "bookingorder")
public class BookingOrder extends ModelWithWorkflowStep implements HasOwner
{

    /**
     *
     */
    private static final long serialVersionUID = 967587490747610888L;

    /**
     * 序列号生产器生产的系统订单编号
     */
    @FieldMetaData(position = 0, label = "Order Number", autogenerated = true)
    @Column(length = 64)
    private @Getter @Setter String orderNum;

    /**
     * 主单号
     */
    @FieldMetaData(position = 10, label = "Mawb")
    @Column(length = 64)
    private @Getter @Setter String mawb;

    /**
     * 分单号
     */
    @FieldMetaData(position = 20, label = "Hawb")
    @Column(length = 64)
    private @Getter @Setter String hawb;

    /**
     * 提货点
     */
    @FieldMetaData(position = 26, label = "pickupLocationCode")
    @Column(length = 100)
    private @Setter @Getter String pickupLocationCode;

    /**
     * 收货地城市代码
     */
    @FieldMetaData(position = 28, label = "Receiving City Code")
    @Column(length = 100)
    private @Setter @Getter String receivingCityCode;

    /**
     * 是否需要转运
     */
    @FieldMetaData(position = 30, label = "Transfer", dataType = FieldMetaDataSupportedDataType.BOOLEAN)
    @Column
    private @Setter @Getter Boolean transferNeeded;

    /**
     *
     * 国际货站 International Cargo Centre Shenzhen（ICCS） 物流园 Logistics Park
     *
     */
    @FieldMetaData(position = 32, label = "Airport Warehouse", dataType = FieldMetaDataSupportedDataType.OBJECT,
            enumClass = AirportWarehouse.class, labelField = "name")
    @ManyToOne
    @JoinColumn(name = "airportWarehouseId",
            foreignKey = @ForeignKey(name = "fk_bookingOrder_airportwarehouse_airportwarehouseid"),
            referencedColumnName = "id")
    private @Setter @Getter AirportWarehouse airportWarehouse;

    /**
     * 预报货物属性
     */
    @FieldMetaData(position = 40, label = "Forecast Googs Attribute", dataType = FieldMetaDataSupportedDataType.OBJECT,
            labelField = "goodsName")
    @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, orphanRemoval = true)
    @JoinColumn(name = "forecastGoogsAttributeId",
            foreignKey = @ForeignKey(name = "fk_bookingOrder_forecastGoogsAttribute_id"), referencedColumnName = "id",
            nullable = true)
    private @Setter @Getter BookingGoodsAttribute forecastGoogsAttribute;

    /**
     * 实际货物属性
     */
    @FieldMetaData(position = 50, label = "Actual Googs Attribute", dataType = FieldMetaDataSupportedDataType.OBJECT,
            labelField = "goodsName")
    @OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, orphanRemoval = true)
    @JoinColumn(name = "actualGoogsAttributeId",
            foreignKey = @ForeignKey(name = "fk_bookingOrder_actualGoogsAttribute_id"), referencedColumnName = "id",
            nullable = true)
    private @Setter @Getter BookingGoodsAttribute actualGoogsAttribute;

    /**
     * 预定航班 List 当需要中转时会有多条数据
     */
    @FieldMetaData(position = 60, label = "Forecast Flight", dataType = FieldMetaDataSupportedDataType.ARRAY,
            labelField = "flightCode", enumClass = FlightInfo.class, multiChoice = true)
    @ManyToMany
    @JoinTable(name = "bookingorder_flightinfo",
            joinColumns = @JoinColumn(name = "bookingOrderId",
                    foreignKey = @ForeignKey(name = "fk_bookingorder_flightinfo_bookingOrderId")),
            inverseJoinColumns = @JoinColumn(name = "forecastFlightId",
                    foreignKey = @ForeignKey(name = "fk_bookingorder_flightinfo_forecastFlightId")))
    private @Setter @Getter List<FlightInfo> forecastFlightList;

    /**
     * 实际航班
     */
    @FieldMetaData(position = 70, label = "Actual Flight", dataType = FieldMetaDataSupportedDataType.ARRAY,
            labelField = "flightCode", enumClass = FlightInfo.class, multiChoice = true)
    @ManyToMany
    @JoinTable(name = "bookingorder_flightinfo",
            joinColumns = @JoinColumn(name = "bookingOrderId",
                    foreignKey = @ForeignKey(name = "fk_bookingorder_flightinfo_bookingOrderId")),
            inverseJoinColumns = @JoinColumn(name = "actualFlightId",
                    foreignKey = @ForeignKey(name = "fk_bookingorder_flightinfo_actualFlightId")))
    private @Setter @Getter List<FlightInfo> actualFlightList;

    /**
     * 预报价
     */
    @FieldMetaData(position = 80, label = "Forecast Quotation Item", labelField = "chargeName",
            dataType = FieldMetaDataSupportedDataType.ARRAY, autogenerated = true)
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "bookingOrderForecastId", foreignKey = @ForeignKey(name = "FK_BookingOrder_ForecastQuotations_Id"))
    private @Setter @Getter List<BookingQuotationItem> forecastQuotations;

    /**
     * 预报价汇总
     */
    @FieldMetaData(position = 90, label = "Forecast Total")
    @Transient
    private @Setter @Getter BigDecimal forecastTotal;

    /**
     * 实际报价
     */
    @FieldMetaData(position = 100, label = "Actual Quotation Item", labelField = "chargeName",
            dataType = FieldMetaDataSupportedDataType.ARRAY)
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "bookingOrderActualId", foreignKey = @ForeignKey(name = "FK_BookingOrder_ActualQuotations_Id"))
    private @Setter @Getter List<BookingQuotationItem> actualQuotations;

    /**
     * 实际报价汇总
     */
    @FieldMetaData(position = 110, label = "Actual Total")
    @Transient
    private @Setter @Getter BigDecimal actualTotal;

    /**
     * 清关派送选项
     */
    @FieldMetaData(position = 120, label = "Customs Clearance Type", enumClass = BookingCustomsClearanceType.class,
            dataType = FieldMetaDataSupportedDataType.OBJECT, labelField = "name", managementSeparately = true)
    @ManyToOne
    @JoinColumn(name = "clearanceTypeId", foreignKey = @ForeignKey(name = "fk_bookingOrder_customsclearanceType_id"),
            referencedColumnName = "id")
    private @Setter @Getter BookingCustomsClearanceType clearanceType;

    /**
     * 出货方式选项
     */
    @FieldMetaData(position = 130, label = "Delivery Type", enumClass = BookingDeliveryType.class,
            dataType = FieldMetaDataSupportedDataType.OBJECT, labelField = "name", managementSeparately = true)
    @ManyToOne
    @JoinColumn(name = "deliveryTypeId", foreignKey = @ForeignKey(name = "fk_bookingOrder_deliveryType_id"),
            referencedColumnName = "id")
    private @Setter @Getter BookingDeliveryType deliveryType;

    /**
     * 提货报关选项
     */
    @FieldMetaData(position = 140, label = "Extract And Declare Service",
            dataType = FieldMetaDataSupportedDataType.ARRAY, labelField = "name",
            enumClass = BookingExtractAndDeclare.class, multiChoice = true, managementSeparately = true)
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "extra_bookingextractanddeclare",
            joinColumns = @JoinColumn(name = "bookingOrderId",
                    foreignKey = @ForeignKey(name = "fk_BookingOrder_Extra_Id")),
            inverseJoinColumns = @JoinColumn(name = "extractAndDeclareId",
                    foreignKey = @ForeignKey(name = "fk_BookingExtractAndDeclare_Extra__Id")))
    private @Setter @Getter List<BookingExtractAndDeclare> extraList;

    /**
     * 客户档案
     */
    @FieldMetaData(position = 150, label = "Customer Center", dataType = FieldMetaDataSupportedDataType.OBJECT,
            labelField = "customerCode", autogenerated = true,hasOwner = true)
    @ManyToOne
    @JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "fk_bookingOrder_customerCenter_id"),
            referencedColumnName = "id")
    private @Getter @Setter CustomerCenter customerCenter;

    /**
     * 失效日期
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd hh:mm")
    @FieldMetaData(position = 160, label = "Expired Date", dataType = FieldMetaDataSupportedDataType.DATE,
            formatter = "yyyy-MM-dd hh:mm")
    @Column(length = 32)
    private @Setter @Getter Date expiredDate;

    /**
     * 特殊报价
     */
    @FieldMetaData(position = 75, label = "Booking Special Quotation", dataType = FieldMetaDataSupportedDataType.ARRAY,
            labelField = "name",autogenerated = true)
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "bookingOrderId", foreignKey = @ForeignKey(name = "FK_BookingOrder_Special_Quotation_Id"))
    private @Getter @Setter List<BookingSpecialQuotation> specialQuotations;

    @FieldMetaData(position = 180, label = "Owner", dataType = FieldMetaDataSupportedDataType.OBJECT,
            labelField = "loginName", managementSeparately = true, autogenerated = true, hasDetail = false)
    @ManyToOne
    @JoinColumn(name = "ownerId", foreignKey = @ForeignKey(name = "fk_bookingorder_useraccount_ownerid"),
            referencedColumnName = "id")
    private @Getter @Setter UserAccount owner;

}
