package com.dragoncargo.sales.model;

import com.dragoncargo.general.model.Weight;
import com.polarj.model.GenericDbInfo;
import com.polarj.model.annotation.FieldMetaData;
import com.polarj.model.annotation.ModelMetaData;
import com.polarj.model.enumeration.FieldMetaDataSupportedDataType;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import javax.persistence.*;
import java.math.BigDecimal;

/**
 * 运费
 */
@ModelMetaData
@Entity
@Table(name = "quotefreightfee")
public @ToString @EqualsAndHashCode(callSuper = false) class QuoteFreightFee extends GenericDbInfo
{

    /**
     * 
     */
    private static final long serialVersionUID = 3405830669845600623L;


    /**
     * 45+ 100+ 300+ 500+ 1000+ 2000+ 3000+
     */
    @FieldMetaData(position = 10, label = "code")
    @Column(length = 100)
    private @Setter @Getter String code;

    @FieldMetaData(position = 20, label = "Name")
    @Column(length = 100)
    private @Setter @Getter String name;

//    @FieldMetaData(position = 10, label = "Minimum Range Weight", dataType = FieldMetaDataSupportedDataType.NUMBER)
//    @Column
//    private @Setter @Getter BigDecimal minimumRangeWeight;

    @FieldMetaData(position = 30, label = "Weight", dataType = FieldMetaDataSupportedDataType.OBJECT,
            embedded = true, formatter = "${value}${unit}")
    @Embedded
    @AttributeOverrides({ @AttributeOverride(name = "unit", column = @Column(name = "minWeightUnit")),
            @AttributeOverride(name = "value", column = @Column(name = "minWeightValue")) })
    private @Setter @Getter Weight minWeight;

    @FieldMetaData(position = 40, label = "Weight", dataType = FieldMetaDataSupportedDataType.OBJECT,
            embedded = true, formatter = "${value}${unit}")
    @Embedded
    @AttributeOverrides({ @AttributeOverride(name = "unit", column = @Column(name = "maxWeightUnit")),
            @AttributeOverride(name = "value", column = @Column(name = "maxWeightValue")) })
    private @Setter @Getter Weight maxWeight;

//    @FieldMetaData(position = 20, label = "Maximum Range Weight", dataType = FieldMetaDataSupportedDataType.NUMBER)
//    @Column
//    private @Setter @Getter BigDecimal maximumRangeWeight;

    /**
     * 分泡比率 50%= 0.5 60%=0.6
     */
    @FieldMetaData(position = 50, label = "BulkyCargo Discount Rate", dataType = FieldMetaDataSupportedDataType.NUMBER)
    @Column
    private @Setter @Getter Double bulkyCargoDiscountRate;

//    /**
//     * 航运信息
//     */
//    @FieldMetaData(position = 40, label = "Quote Navication Info", dataType = FieldMetaDataSupportedDataType.OBJECT,
//            labelField = "description", enumClass = NavicationInfo.class, required = true)
//    @ManyToOne
//    @JoinColumn(name = "quoteNavicationInfoId", foreignKey = @ForeignKey(name = "fk_quotefreightfee_quoteNavicationInfo_id"),
//            referencedColumnName = "id")
//    private @Setter @Getter QuoteNavicationInfo quoteNavicationInfo;

    @FieldMetaData(position = 60, label = "Direct Flight", dataType = FieldMetaDataSupportedDataType.BOOLEAN)
    @Column
    private @Setter @Getter Boolean directFlight;

    @FieldMetaData(position = 70, label = "Description")
    @Column(length = 2048)
    private @Setter @Getter String description;

    @Transient
    private @Setter @Getter Boolean isCheck;

    @FieldMetaData(position = 80, label = "Transfer Needed", dataType = FieldMetaDataSupportedDataType.BOOLEAN,autogenerated = true)
    @Column
    private @Setter @Getter Boolean transferNeeded;
}
