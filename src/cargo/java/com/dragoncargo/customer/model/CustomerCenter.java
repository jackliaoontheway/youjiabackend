package com.dragoncargo.customer.model;

import java.util.List;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.polarj.model.GenericDbInfo;
import com.polarj.model.HasOwner;
import com.polarj.model.UserAccount;
import com.polarj.model.annotation.FieldMetaData;
import com.polarj.model.annotation.ModelMetaData;
import com.polarj.model.enumeration.FieldMetaDataSupportedDataType;
import lombok.Getter;
import lombok.Setter;

//客户信息中心
@ModelMetaData(label = "CustomerCenter",showDetailFieldName = "customerCode")
@Entity
@Table(name = "customercenter")
@JsonIgnoreProperties("hibernateLazyInitializer")
public class CustomerCenter extends GenericDbInfo implements HasOwner {

	/**
	 * 客户编码
	 */
	@FieldMetaData(position = 10, label = "customerCode", autogenerated = true)
	@Column(length = 64)
	private @Getter @Setter String customerCode;

	/**
	 * 	客户类别 //公司客户,普通客户
	 */
	@FieldMetaData(position = 20, label = "Customer Category",enumClass = CustomerCategory.class,
			dataType = FieldMetaDataSupportedDataType.OBJECT,labelField = "name",managementSeparately = true)
	@ManyToOne
	@JoinColumn(name = "customerCategoryId", foreignKey = @ForeignKey(name = "fk_customercenter_customerCategory_id"), referencedColumnName = "id")
	private @Getter @Setter CustomerCategory customerCategory;

	/**
	 * 客户类别 //VIP,普通
	 */
	@FieldMetaData(position = 25, label = "Customer Level",enumClass = CustomerLevel.class,
			dataType = FieldMetaDataSupportedDataType.OBJECT,labelField = "name",managementSeparately = true)
	@ManyToOne
	@JoinColumn(name = "customerLevelId", foreignKey = @ForeignKey(name = "fk_customercenter_customerLevel_id"), referencedColumnName = "id")
	private @Getter @Setter CustomerLevel customerLevel;


	/**
	 * 	状态 在用/停用
	 */
	@FieldMetaData(position = 30, label = "Customer Status",enumClass = CustomerStatus.class,
			dataType = FieldMetaDataSupportedDataType.OBJECT,labelField = "name",managementSeparately = true)
	@ManyToOne
	@JoinColumn(name = "customerStatusId", foreignKey = @ForeignKey(name = "fk_customercenter_status_id"), referencedColumnName = "id")
	private @Getter @Setter CustomerStatus customerStatus;

	/**
	 * 客户信息
 	 */
	@FieldMetaData(position = 40, label = "CustomerInfo", dataType = FieldMetaDataSupportedDataType.OBJECT,
			labelField = "fullName")
	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, orphanRemoval = true)
	@JoinColumn(name = "customerInfoId", foreignKey = @ForeignKey(name = "FK_Customer_Info_Id"))
	private @Getter @Setter CustomerInfo customerInfo;

	/**
	 * 联系人信息
	 */
	@FieldMetaData(position = 50, label = "CustomerConcats", labelField = "contactsName",
			dataType = FieldMetaDataSupportedDataType.ARRAY)
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerConcatsId", foreignKey = @ForeignKey(name = "FK_CustomerCenter_CustomerConcats_Id"))
	private @Getter @Setter List<CustomerConcat> customerConcats;

	/**
	 * 	企业资质信息
 	 */
	@FieldMetaData(position = 60, label = "QualificationInfo", dataType = FieldMetaDataSupportedDataType.OBJECT,
			labelField = "name")
	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER, orphanRemoval = true)
	@JoinColumn(name = "qualificationInfoId", foreignKey = @ForeignKey(name = "FK_Qualification_Info_Id"))
	private @Getter @Setter QualificationInfo qualificationInfo;

	/**
	 * 特殊报价
	 */
	@FieldMetaData(position = 70, label = "SpecialQuotation", dataType = FieldMetaDataSupportedDataType.ARRAY,
			labelField = "name")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "FK_Special_Quotation_Id"))
	private @Getter @Setter List<SpecialQuotation> specialQuotations;



	/**
	 * 合同信息
	 */
	@FieldMetaData(position = 80, label = "AgreementInfo Items", labelField = "name",
			dataType = FieldMetaDataSupportedDataType.ARRAY)
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "FK_Contract_Info_Id"))
	private @Getter @Setter List<AgreementInfo> agreementInfos;


	/**
	 * 发票信息
	 */
	@FieldMetaData(position = 90, label = "InvoiceInfo  Items", dataType = FieldMetaDataSupportedDataType.ARRAY,
			labelField = "companyName")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "FK_Invoice_Info_Id"))
	private @Getter @Setter List<InvoiceInfo> invoiceInfo;

	/**
	 * 收货地址信息
	 */
	@FieldMetaData(position = 100, label = "Address Info Items", dataType = FieldMetaDataSupportedDataType.ARRAY,
			labelField = "name")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "FK_CustomerCenter_CustomerAddressInfo_Id"))
	private @Getter @Setter List<CustomerAddressInfo> addressInfos;

	/**
	 * 发货地信息
	 */
	@FieldMetaData(position = 110, label = "Shipping Address Items", dataType = FieldMetaDataSupportedDataType.ARRAY,
			labelField = "settlementCompany")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
	@JoinColumn(name = "customerCenterId", foreignKey = @ForeignKey(name = "FK_Shipping_Address_Id"))
	private @Getter @Setter List<ShippingAddress> shippingAddress;


	/**
	 * 业务员
	 */
	@FieldMetaData(position = 120, label = "Sever", dataType = FieldMetaDataSupportedDataType.OBJECT, labelField = "loginName", managementSeparately = true, autogenerated = true, hasDetail = false)
	@ManyToOne
	@JoinColumn(name = "severId", foreignKey = @ForeignKey(name = "FK_severId"), referencedColumnName = "id")
	private @Getter @Setter UserAccount sever;


	@FieldMetaData(position = 130, label = "Owner", dataType = FieldMetaDataSupportedDataType.OBJECT, labelField = "loginName", managementSeparately = true, autogenerated = true, detailHide = true,hide = true)
	@ManyToOne
	@JoinColumn(name = "ownerId", foreignKey = @ForeignKey(name = "fk_customercenter_useraccount_ownerid"), referencedColumnName = "id")
	private @Getter @Setter UserAccount owner;
}
