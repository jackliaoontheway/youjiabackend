package com.polarj.model;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.polarj.model.annotation.FieldMetaData;
import com.polarj.model.annotation.ModelMetaData;
import com.polarj.model.enumeration.FieldMetaDataSupportedDataType;
import com.polarj.model.enumeration.ReportStatus;
import com.polarj.model.enumeration.ScheduledType;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ModelMetaData(showDetailFieldName = "name")
@Entity
@Table(name = "reporttask")
public @ToString @EqualsAndHashCode(callSuper = false) class ReportTask extends GenericDbInfo implements HasOwner
{
    private static final long serialVersionUID = 3750517425170959226L;

    @FieldMetaData(position = 10, label = "Owner", dataType = FieldMetaDataSupportedDataType.OBJECT,
            labelField = "name", managementSeparately = true, autogenerated=true)
    @ManyToOne
    @JoinColumn(name = "ownerId", foreignKey = @ForeignKey(name = "fk_reporttask_useraccount_ownerId"),
            referencedColumnName = "id")
    private @Getter @Setter UserAccount owner; // who apply this report task

    @FieldMetaData(position = 10, label = "Name")
    @Column(length = 64)
    private @Getter @Setter String name;

    @FieldMetaData(position = 20, label = "Description")
    @Column(length = 512)
    private @Getter @Setter String description;

    @FieldMetaData(position = 30, label = "Status", enumClass = ReportStatus.class)
    @Column(length = 32)
    private @Getter @Setter String status;

    @FieldMetaData(position = 40, label = "Repeat Type", enumClass = ScheduledType.class)
    @Column(length = 64)
    private @Getter @Setter String scheduledType;

    @FieldMetaData(position = 50, label = "Report On", dataType = FieldMetaDataSupportedDataType.NUMBER)
    @Column()
    private @Getter @Setter Integer scheduledDay; // 根据定时的类型，描述是每周/每月/每季/每年的哪天做该任务

    @FieldMetaData(position = 60, label = "Report At", dataType = FieldMetaDataSupportedDataType.NUMBER, minVal = "0",
            maxVal = "23")
    @Column()
    private @Getter @Setter Integer scheduledTime; // 指定天的什么时间（小时）做该任务

    @FieldMetaData(position = 70, label = "Next Report Time", dataType = FieldMetaDataSupportedDataType.DATE,
            formatter = FieldMetaDataSupportedDataType.DATEFORMAT)
    @Column()
    private @Getter @Setter Date nextResultTime;

    @FieldMetaData(position = 80, label = "Results", dataType = FieldMetaDataSupportedDataType.ARRAY,
            autogenerated = true)
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "taskId", foreignKey = @ForeignKey(name = "FK_reporttask_reportresult_taskId"))
    private @Getter @Setter List<ReportResult> results;

}
