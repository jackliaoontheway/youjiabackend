package com.polarj.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import com.polarj.model.annotation.FieldMetaData;
import com.polarj.model.annotation.ModelMetaData;
import com.polarj.model.enumeration.FieldMetaDataSupportedDataType;
import com.polarj.model.enumeration.SearchType;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@ModelMetaData(showDetailFieldName = "subject")
@Entity
@Table(name = "emaildraft")
public @ToString @EqualsAndHashCode(callSuper = false) class EmailDraft extends GenericDbInfo
{
    private static final long serialVersionUID = -4175462320075078829L;

    // 可以用于回邮地址的设置，从系统发出的邮件，只能是系统设置好的发送邮件地址
    @FieldMetaData(position = 10, label = "From", autogenerated = true, hide = true)
    @Column(length = 128)
    private @Getter @Setter String fromAddress;

    // 逗号分开的发送email的收件地址
    @FieldMetaData(position = 20, label = "To", required = true, minLength = 6, sortable = true,
            searchType = SearchType.VALUE, dataType = FieldMetaDataSupportedDataType.EMAIL)
    @Column(length = 128)
    private @Getter @Setter String toAddress;

    // 逗号分开的密送email的收件地址
    @FieldMetaData(position = 15, label = "BCC", dataType = FieldMetaDataSupportedDataType.EMAIL)
    @Column(length = 128)
    private @Getter @Setter String bccAddress;

    @FieldMetaData(position = 40, label = "Subject", required = true, maxLength = 20)
    @Column(length = 255)
    private @Getter @Setter String subject;

    @FieldMetaData(position = 50, label = "Content", required = true)
    @Column(length = 8192)
    private @Getter @Setter String content;

    // 发送后，保存可能的出错信息
    @FieldMetaData(position = 60, label = "Status", autogenerated = true)
    @Column(length = 128)
    private @Getter @Setter String status;

    @FieldMetaData(position = 70, label = "Error Msg", autogenerated = true)
    @Column(length = 255)
    private @Getter @Setter String errorMessage;
}
